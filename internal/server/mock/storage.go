// Code generated by MockGen. DO NOT EDIT.
// Source: internal/server/storage/storage.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	models "github.com/Arcadian-Sky/musthave-metrics/internal/server/models"
	storage "github.com/Arcadian-Sky/musthave-metrics/internal/server/storage"
	gomock "github.com/golang/mock/gomock"
)

// MockMetricsStorage is a mock of MetricsStorage interface.
type MockMetricsStorage struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsStorageMockRecorder
}

// MockMetricsStorageMockRecorder is the mock recorder for MockMetricsStorage.
type MockMetricsStorageMockRecorder struct {
	mock *MockMetricsStorage
}

// NewMockMetricsStorage creates a new mock instance.
func NewMockMetricsStorage(ctrl *gomock.Controller) *MockMetricsStorage {
	mock := &MockMetricsStorage{ctrl: ctrl}
	mock.recorder = &MockMetricsStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsStorage) EXPECT() *MockMetricsStorageMockRecorder {
	return m.recorder
}

// GetJSONMetric mocks base method.
func (m *MockMetricsStorage) GetJSONMetric(ctx context.Context, metric *models.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJSONMetric", ctx, metric)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetJSONMetric indicates an expected call of GetJSONMetric.
func (mr *MockMetricsStorageMockRecorder) GetJSONMetric(ctx, metric interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJSONMetric", reflect.TypeOf((*MockMetricsStorage)(nil).GetJSONMetric), ctx, metric)
}

// GetMetric mocks base method.
func (m *MockMetricsStorage) GetMetric(ctx context.Context, mtype storage.MetricType) map[string]interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetric", ctx, mtype)
	ret0, _ := ret[0].(map[string]interface{})
	return ret0
}

// GetMetric indicates an expected call of GetMetric.
func (mr *MockMetricsStorageMockRecorder) GetMetric(ctx, mtype interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetric", reflect.TypeOf((*MockMetricsStorage)(nil).GetMetric), ctx, mtype)
}

// GetMetrics mocks base method.
func (m *MockMetricsStorage) GetMetrics(ctx context.Context) map[storage.MetricType]map[string]interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetrics", ctx)
	ret0, _ := ret[0].(map[storage.MetricType]map[string]interface{})
	return ret0
}

// GetMetrics indicates an expected call of GetMetrics.
func (mr *MockMetricsStorageMockRecorder) GetMetrics(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetrics", reflect.TypeOf((*MockMetricsStorage)(nil).GetMetrics), ctx)
}

// Ping mocks base method.
func (m *MockMetricsStorage) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockMetricsStorageMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockMetricsStorage)(nil).Ping))
}

// SetMetrics mocks base method.
func (m *MockMetricsStorage) SetMetrics(ctx context.Context, metrics map[storage.MetricType]map[string]interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetMetrics", ctx, metrics)
}

// SetMetrics indicates an expected call of SetMetrics.
func (mr *MockMetricsStorageMockRecorder) SetMetrics(ctx, metrics interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMetrics", reflect.TypeOf((*MockMetricsStorage)(nil).SetMetrics), ctx, metrics)
}

// UpdateJSONMetric mocks base method.
func (m *MockMetricsStorage) UpdateJSONMetric(ctx context.Context, metric *models.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateJSONMetric", ctx, metric)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateJSONMetric indicates an expected call of UpdateJSONMetric.
func (mr *MockMetricsStorageMockRecorder) UpdateJSONMetric(ctx, metric interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateJSONMetric", reflect.TypeOf((*MockMetricsStorage)(nil).UpdateJSONMetric), ctx, metric)
}

// UpdateJSONMetrics mocks base method.
func (m *MockMetricsStorage) UpdateJSONMetrics(ctx context.Context, metrics *[]models.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateJSONMetrics", ctx, metrics)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateJSONMetrics indicates an expected call of UpdateJSONMetrics.
func (mr *MockMetricsStorageMockRecorder) UpdateJSONMetrics(ctx, metrics interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateJSONMetrics", reflect.TypeOf((*MockMetricsStorage)(nil).UpdateJSONMetrics), ctx, metrics)
}

// UpdateMetric mocks base method.
func (m *MockMetricsStorage) UpdateMetric(ctx context.Context, mtype, name, value string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMetric", ctx, mtype, name, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateMetric indicates an expected call of UpdateMetric.
func (mr *MockMetricsStorageMockRecorder) UpdateMetric(ctx, mtype, name, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMetric", reflect.TypeOf((*MockMetricsStorage)(nil).UpdateMetric), ctx, mtype, name, value)
}
