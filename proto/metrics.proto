//protoc -I $GOPATH/pkg/mod/github.com/googleapis/googleapis@latest/ -I . --grpc-gateway_out . --grpc-gateway_opt logtostderr=true --grpc-gateway_opt paths=source_relative service.proto
//protoc -I proto/googleapi/ -I proto/. --grpc-gateway_out=. --grpc-gateway_opt=logtostderr=true --grpc-gateway_opt=paths=source_relative metrics.proto
syntax = "proto3";

package metrics;
option go_package = "/internal/server/handler/protometrics";
import "googleapi/google/api/annotations.proto";

// Запрос для получения метрик
message GetMetricsRequest {}

// Ответ для получения метрик
message GetMetricsResponse {
    repeated Metric metrics = 1;
}

// Запрос для обновления метрик через JSON
message UpdateJSONMetricsRequest {
    repeated Metric metrics = 1;
}

// Ответ для обновления метрик через JSON
message UpdateJSONMetricsResponse {
    repeated Metric metrics = 1;
}

// Запрос для обновления метрики
message UpdateMetricRequest {
    string type = 1;
    string name = 2;
    string value = 3;
}

// Ответ для обновления метрики
message UpdateMetricResponse {
     repeated Metric metrics = 1;
}

// Запрос для получения метрики
message GetMetricRequest {
    string type = 1;
    string name = 2;
}

// Ответ для получения метрики
message GetMetricResponse {
    string value = 1;
}

// Ответ для получения метрики
message GetJSONMetricsResponse {
    repeated Metric metrics = 1;
}

// Запрос для проверки соединения с базой данных
message PingDBRequest {}

// Ответ для проверки соединения с базой данных
message PingDBResponse {
    string message = 1;
}

// Определение метрики
message Metric {
    string id = 1;
    string type = 2;
    int64 delta = 3;
    double value = 4;
}

service MetricsService {
    // Получает метрику
    rpc GetMetric (Metric) returns (GetMetricResponse) {
        option (google.api.http) = {
            get: "/value/{type}/{id}"
        };
    }

    // Получает метрики
    rpc GetMetrics (GetMetricsRequest) returns (GetMetricsResponse) {
        option (google.api.http) = {
            get: "/value"
        };
    }
    
    rpc GetMetricsRoot (GetMetricsRequest) returns (GetMetricsResponse) {
        option (google.api.http) = {
            get: "/value"
        };
    }
    
    // Получает метрики
    rpc GetJSONMetrics (Metric) returns (GetJSONMetricsResponse) {
        option (google.api.http) = {
            post: "/value"
        };
    }
    
    // Обновляет метрики через JSON
    rpc UpdateJSONMetrics (UpdateJSONMetricsRequest) returns (UpdateJSONMetricsResponse) {
        option (google.api.http) = {
            post: "/updates"
            body: "*"
        };
    }

    // Обновляет метрику (для маршрута /update/)
    rpc UpdateJSONMetric (Metric) returns (Metric) {
        option (google.api.http) = {
            post: "/update"
            body: "*"
        };
    }

    // Обновляет метрику
    rpc UpdateMetric (UpdateMetricRequest) returns (UpdateMetricResponse) {
        option (google.api.http) = {
            post: "/update/{type}/{name}/{value}"
            body: "*"
        };
    }

    // Проверяет соединение с базой данных
    rpc PingDB (PingDBRequest) returns (PingDBResponse) {
        option (google.api.http) = {
            get: "/ping"
        };
    }
}